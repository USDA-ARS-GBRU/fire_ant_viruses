sampledat <-sampledat[,-1]
names(sampledat)[6] <-"ITSxpress"
names(sampledat)[7] <-"ITSx"
head(sampledat)
df <-sampledat[sampledat$experiment_type=='samples',c(4,6,7,1)]
p <- ggplot(df) + geom_segment(aes(x=1, xend=2, y=`ITSx`, yend=`ITSxpress`, col=region), size=.25, alpha = 1, show.legend=T) +
scale_y_log10(breaks=c(10,20,30,40,50,60,70,80,100,200,300,400,500,600,700,800,1000,2000,3000)) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("ITS1", "ITS2"),
values = c("#1f78b4", "#33a02c")) +  # color of lines
labs(x="", y="Runtime in seconds on a 40 core CPU") +  # Axis labels
xlim(.5, 2.5)  # X and Y axis
# Add text
p <- p + geom_text(label="ITSx", x=1, y=log10(max(df$`ITSx`, df$`ITSxpress`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="ITSxpress", x=2, y=log10(max(df$`ITSx`, df$`ITSxpress`)), hjust=-0.1, size=5)  # title
p + theme_bw(14) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), legend.position = "bottom")
p <- ggplot(derep) + geom_segment(aes(x=1, xend=2, y=`seqs`, yend=`unique`, col=region), size=.75, alpha = 1, show.legend=T) +
scale_y_log10(breaks=c(100,200,500,1000,2000,5000,10000,20000,50000,100000,200000),labels=fancy_scientific) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("ITS1", "ITS2"),
values = c("#1f78b4", "#33a02c")) +  # color of lines
labs(x="", y="Number of sequences processed") +  # Axis labels
xlim(.5, 2.5)  # X and Y axis
p <- p + geom_text(label="Total", x=1, y=log10(max(derep$seqs)), hjust=1.1, size=5)  # title
p <- p + geom_text(label="Clustered", x=2, y=log10(max(derep$seqs)), hjust=-0.1, size=5)  # title
p + theme_bw(14) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),legend.position = "bottom")
tl <- melt(sampledat[sampledat$experiment_type=='threads',],id.vars=c("region","sample","experiment_type","threads", "jobid"), measure.vars= c("program"),value.name="runtime")
tl
tl <- melt(sampledat[sampledat$experiment_type=='threads',],id.vars=c("region","sample","experiment_type","threads", "jobid"),value.name="runtime")
tl
bdata <- ddply(tl, c("region", "variable","threads" ), summarise,
N    = length(runtime),
mean = mean(runtime),
sd   = sd(runtime),
se   = sd / sqrt(N))
bdata
fill=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'), color = c('#a6cee3', '#b2df8a','#33a02c','#1f78b4')
scale_color_manual(values=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'))
scale_fill_manual(values=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'))
p <-ggplot(bdata, aes(x=threads, y=mean, color= interaction(region,variable, sep=":"), group = interaction(region,variable, sep=":")), size=1.5) +
scale_y_log10() +
geom_line() +
scale_color_manual(values=c('#1f78b4','#33a02c','#a6cee3', '#b2df8a')) +
geom_point(show.legend = FALSE) +
geom_errorbar(data=bdata, mapping=aes(x=threads, ymin=mean - se, ymax=mean + se), size=1.5) +
labs( y = "Runtime in Seconds", x = "Processor Threads", color = "Region:Program") +
theme_bw()
p
p <-ggplot(bdata, aes(x=threads, y=mean, color= interaction(region,variable, sep=":"), group = interaction(region,variable, sep=":")), size=1.5) +
scale_y_log10() +
geom_line(size=1.5) +
scale_color_manual(values=c('#1f78b4','#33a02c','#a6cee3', '#b2df8a')) +
geom_point(show.legend = FALSE) +
geom_errorbar(data=bdata, mapping=aes(x=threads, ymin=mean - se, ymax=mean + se), size=1.5) +
labs( y = "Runtime in Seconds", x = "Processor Threads", color = "Region:Program") +
theme_bw()
p
p <-ggplot(bdata, aes(x=threads, y=mean, color= interaction(region,variable, sep=":"), group = interaction(region,variable, sep=":")), size=1) +
scale_y_log10() +
geom_line(size=1) +
scale_color_manual(values=c('#1f78b4','#33a02c','#a6cee3', '#b2df8a')) +
geom_point(show.legend = FALSE) +
geom_errorbar(data=bdata, mapping=aes(x=threads, ymin=mean - se, ymax=mean + se), size=1) +
labs( y = "Runtime in Seconds", x = "Processor Threads", color = "Region:Program") +
theme_bw()
p
p <-ggplot(bdata, aes(x=threads, y=mean, color= interaction(region,variable, sep=":"), group = interaction(region,variable, sep=":")), size=1) +
scale_y_log10() +
geom_line(size=1) +
scale_color_manual(values=c('#1f78b4','#33a02c','#a6cee3', '#b2df8a')) +
geom_point(show.legend = FALSE) +
geom_errorbar(data=bdata, mapping=aes(x=threads, ymin=mean - se, ymax=mean + se), size=1) +
labs( y = "Running time in seconds", x = "Processor threads", color = "Region:Program") +
theme_bw()
p
bdata
6919.60/3600
library(ggplot2)
library(plyr)
#import data samples and threads timing experiments
sampledat <-read.csv('/Users/rivers/Documents/ITSXpress_paper/timingdata.csv', header=T)
sampledat <-sampledat[,-1]
names(sampledat)[6] <-"ITSxpress"
names(sampledat)[7] <-"ITSx"
# import table on the number of duplicated reads
derep1 <- read.csv('/Users/rivers/Documents/ITSXpress_paper/its1_derep_csv.txt', header=T)
derep2 <- read.csv('/Users/rivers/Documents/ITSXpress_paper/its2_derep_csv.txt', header=T)
derep <- rbind(derep1, derep2)
derep$region <-c(rep("ITS1",15), rep("ITS2",15) )
derep$ratio<-(derep$seqs/derep$unique)
fancy_scientific <- function(l) {
# turn in to character string in scientific notation
l <- format(l, scientific = TRUE)
# quote the part before the exponent to keep all the digits
l <- gsub("^(.*)e", "'\\1'e", l)
# turn the 'e+' into plotmath format
l <- gsub("e", "%*%10^", l)
# return this as an expression
parse(text=l)
}
#Fig1 slope chart
df <-sampledat[sampledat$experiment_type=='samples',c(4,6,7,1)]
p <- ggplot(df) + geom_segment(aes(x=1, xend=2, y=`ITSx`, yend=`ITSxpress`, col=region), size=.25, alpha = 1, show.legend=T) +
scale_y_log10(breaks=c(10,20,30,40,50,60,70,80,100,200,300,400,500,600,700,800,1000,2000,3000)) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("ITS1", "ITS2"),
values = c("#1f78b4", "#33a02c")) +  # color of lines
labs(x="", y="Runtime in seconds on a 40 core CPU") +  # Axis labels
xlim(.5, 2.5)  # X and Y axis
# Add text
p <- p + geom_text(label="ITSx", x=1, y=log10(max(df$`ITSx`, df$`ITSxpress`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="ITSxpress", x=2, y=log10(max(df$`ITSx`, df$`ITSxpress`)), hjust=-0.1, size=5)  # title
p + theme_bw(14) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), legend.position = "bottom")
ggsave("fig1.eps", width = 3, height = 3)
# Plot Fig 2. the in sequences proccesed by clustering
p <- ggplot(derep) + geom_segment(aes(x=1, xend=2, y=`seqs`, yend=`unique`, col=region), size=.75, alpha = 1, show.legend=T) +
scale_y_log10(breaks=c(100,200,500,1000,2000,5000,10000,20000,50000,100000,200000),labels=fancy_scientific) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("ITS1", "ITS2"),
values = c("#1f78b4", "#33a02c")) +  # color of lines
labs(x="", y="Number of sequences processed") +  # Axis labels
xlim(.5, 2.5)  # X and Y axis
p <- p + geom_text(label="Total", x=1, y=log10(max(derep$seqs)), hjust=1.1, size=5)  # title
p <- p + geom_text(label="Clustered", x=2, y=log10(max(derep$seqs)), hjust=-0.1, size=5)  # title
p + theme_bw(14) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),legend.position = "bottom")
## Plot thread data
library(reshape2)
tl <- melt(sampledat[sampledat$experiment_type=='threads',],id.vars=c("region","sample","experiment_type","threads", "jobid"),value.name="runtime")
bdata <- ddply(tl, c("region", "variable","threads" ), summarise,
N    = length(runtime),
mean = mean(runtime),
sd   = sd(runtime),
se   = sd / sqrt(N))
fill=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'), color = c('#a6cee3', '#b2df8a','#33a02c','#1f78b4')
scale_color_manual(values=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'))
scale_fill_manual(values=c('#a6cee3','#1f78b4', '#b2df8a','#33a02c'))
p <-ggplot(bdata, aes(x=threads, y=mean, color= interaction(region,variable, sep=":"), group = interaction(region,variable, sep=":")), size=1) +
scale_y_log10() +
geom_line(size=1) +
scale_color_manual(values=c('#1f78b4','#33a02c','#a6cee3', '#b2df8a')) +
geom_point(show.legend = FALSE) +
geom_errorbar(data=bdata, mapping=aes(x=threads, ymin=mean - se, ymax=mean + se), size=1) +
labs( y = "Running time in seconds", x = "Processor threads", color = "Region:Program") +
theme_bw()
p
ggsave("fig3.eps", width = 4, height = 3)
prop.test(c(7,369),c(22,637))
?prop.test
prop.test(c(7,369),c(22,637) alternative="less")
prop.test(c(7,369),c(22,637), alternative="less")
prop.test(c(7,369),c(22,637), alternative="more")
prop.test(c(7,369),c(22,637), alternative="greater")
prop.test(c(7,369),c(22,637), alternative="two.sided")
prop.test(c(7,369),c(22,637), alternative="more")
prop.test(c(7,369),c(22,637), alternative="less")
prop.test(c(7,11,369),c(22,13,637), alternative="less")
prop.test(c(7,369),c(22,637), alternative="less")
prop.test(c(7,369),c(22,637), alternative="less", p=.99)
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.99)
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.999)
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.999999)
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.95)
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.5)
prop.test(c(320,369),c(600,637), alternative="less", conf.level=.5)
?fisher.test
prop.test(matrix(c(7,369, 22,637), nrow=2))
prop.test(matrix(c(7,369, 22,637), ncol=2))
prop.test(matrix(c(7,22, 369,637), ncol=2))
prop.test(matrix(c(7,22, 369,637), ncol=2))
TeaTasting <-
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
fisher.test(TeaTasting, alternative = "greater")
TeaTasting
TeaTasting <-
matrix(c(100, 1, 1, 100),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
fisher.test(TeaTasting, alternative = "greater")
TeaTasting <-
matrix(c(22, 7, 637, 369),
nrow = 2,
dimnames = list(UF = c("all", "pass"),
FL = c("all", "pass")))
fisher.test(TeaTasting, alternative = "greater")
TeaTasting <-
matrix(c((22-7), 7, (637-369), 369),
nrow = 2,
dimnames = list(UF = c("all", "pass"),
FL = c("all", "pass")))
fisher.test(TeaTasting, alternative = "greater")
prop.test(c(7,369),c(22,637), alternative="less", conf.level=.95)
TeaTasting <-
matrix(c((22-7), 7, (637-369), 369),
nrow = 2,
dimnames = list(UF = c("fail", "pass"),
FL = c("fail", "pass")))
fisher.test(TeaTasting, alternative = "greater")
install.packages("Exact")
exact.test(TeaTasting)
library(Exact)
exact.test(TeaTasting)
dat<- read.table("~/Downloads/0A0B25526F599E87A1E8D7C612D23AF7205F0239978CBD9C491767A0C1D237CC/lenhist.txt", sep="\t")
head(dat)
dat<- read.table("~/Downloads/0A0B25526F599E87A1E8D7C612D23AF7205F0239978CBD9C491767A0C1D237CC/histogram.txt", sep="\t")
head(dat)
dat
library(ggplot2)
plt<-ggplot2(dat, aes(V1, V3))
plt<-ggplot(dat, aes(V1, V3))
plt + geom_density()
plt + geom_freqpoly()
plt + geom_area()
plt + geom_histogram()
plt + geom_line()
plt<-ggplot(dat, aes(V1, V2))
plt + geom_histogram()
plt + geom_line()
plt + geom_area()
plt + geom_area() + labs(x="ITS length", y="Frequency") + title("ITS lengths for Fungi in the Unite Database, N=30,696")
plt<-ggplot(dat, aes(V1, V2))
plt + geom_area() + labs(x="ITS length", y="Frequency") + title("ITS lengths for Fungi in the Unite Database, N=30,696")
plt
plt + geom_area() + labs(x="ITS length", y="Frequency") + title("ITS lengths for Fungi in the Unite Database, N=30,696")
plt + geom_area() + labs(x="ITS length", y="Frequency")
plt + geom_area() + labs(x="ITS length", y="Frequency") +title("sdf")
plt + geom_area() + labs(x="ITS length", y="Frequency") + title="ITS lengths for Fungi in the Unite Database, N=30,696"
plt + geom_area() + labs(x="ITS length", y="Frequency", title("ITS lengths for Fungi in the Unite Database, N=30,696")
)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="ITS lengths for Fungi in the Unite Database, N=30,696")
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696")
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696", theme_grey(base_size = 36) )
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696"+ theme_grey(base_size = 36) )
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696"+ theme_grey(base_size = 56) )
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696"+ theme_grey(base_size = 1) )
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696"
)
library(ggplot2)
dat<- read.table("~/Downloads/0A0B25526F599E87A1E8D7C612D23AF7205F0239978CBD9C491767A0C1D237CC/histogram.txt", sep="\t")
plt<-ggplot(dat, aes(V1, V2))
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for Fungi in the Unite Database, N=30,696"
)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for fungi in the Unite Database, N=30,696")
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for fungi in the Unite Database, N=30,696") + theme_wb(base_size(11))
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for fungi in the Unite Database, N=30,696") + theme_wb(base_size=11)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for fungi in the Unite Database, N=30,696") + theme_dark(base_size=11)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="Distribution ITS lengths for fungi in the Unite Database, N=30,696") + theme_dark(base_size=22)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="ITS Length Distribution", N=30,696") + theme_grey(base_size=20)
)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="ITS Length Distribution", N="30,696") + theme_grey(base_size=20)
plt + geom_area() + labs(x="ITS length", y="Frequency", title="ITS Length Distribution", N="30,696") + theme_grey(base_size=20)
plt + geom_area() + labs(x="ITS length", y="Frequency", N="30,696") + theme_grey(base_size=20)
plt + geom_area() + labs(x="ITS length", y="Frequency", N="30,696") + theme_grey(base_size=25)
library(ggplot2)
dat<- read.table("~/Documents/collaboratorProjects/fireants/cov.all.txt", sep="\t")
View(dat)
View(dat)
head(dat)
View(dat)
View(dat)
ggplot(dat, aes(color=V2, y=V3, x=V1)) +
geom_line()
ggplot(dat, aes(color=V2, y=log(V3), x=V1)) +
geom_line()
ggplot(dat, aes(grouping()=V2, y=log(V3), x=V1)) +
geom_line()
ggplot(dat, aes(group=V2, y=log(V3), x=V1)) +
geom_line()
ggplot(dat, aes(group=V2, y=log(V3), x=V1)) +
geom_line(color=V2)
ggplot(dat, aes(group=V2, y=log(V3), x=V1)) +
geom_line(aes(color=V2))
ggplot(dat, aes(group=V2, y=log10(V3), x=V1)) +
geom_line(aes(color=V2))
head(dat)
dat$V1[1][1]
str(dat$V1[1])
to.char(dat$V1[1])
substr(dat$V1[1], 1)
substr(dat$V1[1], 1,4)
substr(dat$V1[1], 1,1)
dat$sample <-substr(dat$V1, 1,1)
ggplot(dat, aes(color=sample, y=log(V3), x=V2)) +
geom_line()
ggplot(dat, aes(group=V2, y=log10(V3), x=V1)) +
geom_line(aes(color=V2))
ggplot(dat, aes(color=V2, y=log(V3), x=sample)) +
geom_line(aes(color=V2))
ggplot(dat, aes(group=V2, y=log(V3), x=sample)) +
geom_line(aes(color=V2))
ggplot(dat, aes(group=V2, y=(V3), x=sample)) +
geom_line(aes(color=V2))
ggplot(dat, aes(group=V2, y=log(V3), x=sample)) +
geom_line(aes(color=V2))
ggplot(dat, aes(group=V2, y=log10(V3), x=sample)) +
geom_line(aes(color=V2))
library(ggplot2)
dat<- read.table("~/Documents/collaboratorProjects/fireants/all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
head(dat)
rm(dat)
dat<- read.table("~/Documents/collaboratorProjects/fireants/all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
dat<- read.table("~/Documents/collaboratorProjects/fireants/all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
head(dat)
dat<- read.table("~/Documents/collaboratorProjects/fireants/all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
names(dat) <-c('name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads')
head(dat)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
head(dat)
ggplot(data, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill")
write.csv(dat, ~/Documents/collaboratorProjects/fireants/counts.csv")
write.csv(dat, "~/Documents/collaboratorProjects/fireants/counts.csv")
7185+
18204+
9685+
5292+
68598+
110603+
84216+
52380+
0
rm (list=ls())
library(ggplot2)
d1 <- read.table("~/Downloads/Rtnseq_ClusterID.csv", sep=",")
View(d1)
View(d1)
library(ggplot2)
d1 <- read.table("~/Downloads/Rtnseq_ClusterID.csv", sep=",", header=TRUE)
d2 <- read.table("~/Downloads/Rtnseq.csv", sep=",", header=TRUE)
View(d2)
View(d1)
hist(d1$dif_max_min)
View(d2)
d1[d1$clusterID=='130500db5c2d7ff5bfcd66c37fab29462bd59527',]
d2[d2$clusterID=='130500db5c2d7ff5bfcd66c37fab29462bd59527',]
View(d1)
View(d2)
d2[d2$clusterID=='0666d02bf780bd7f70983ac1405e3f331646b8e7',]
hist(d1$log10(dif_max_min + 1))
hist(log10(d1$dif_max_min + 1)))
hist(log10(d1$dif_max_min + 1))
hist(log10(d1$median_mapGstar))
plot(d1$median_mapGstar, d1$dif_max_min)
plot(d1$median_mapGstar, log10(d1$dif_max_min)
)
plot(d2$mapGstart)
plot(d2$mapGstart)
hist(d2$mapGstart)
plot(d2$lib_name,d2$mapGstart)
plot(d2$clusterID,d2$mapGstart)
plot(d2$N5_Index,d2$mapGstart)
plot(d2$N7_Index,d2$mapGstart)
plot(d2$rb,d2$mapGstart)
plot(d2$lib_name,d2$mapGstart)
ggplot(longcomp[longcomp$variable=="OTU_6",], aes(x=tissue, y=clr, fill=infection)) + geom_bar(stat="identity", position="dodge") + ggtitle("Presence of Microsporidian Nosema OTU in Nezara viridula") +     ylab("Centered Log Ratio") + xlab("Tissue")
library(compositions)
library(ggplot2)
library(reshape2)
path="/Users/rivers/Documents/collaboratorProjects/nosema-stinkbugs/041918BEillcus515F-pr.fasta.otus.fa.OTU.clean.txt"
data <- read.table(path, header=T, sep="\t")
data2 <-data[,6:13]
dc = ccomp(t(data2))
comp = clr(dc)
names(comp)<-data[,1]
compdf<-as.data.frame(comp)
compdf$tissue<-c("FatBody","Ovary","Spermatheca","Egg","FatBody","Ovary","Spermatheca","Egg")
compdf$infection<-c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE)
longcomp<- melt(compdf, value.name="clr")
ggplot(longcomp[longcomp$variable=="OTU_6",], aes(x=tissue, y=clr, fill=infection)) + geom_bar(stat="identity", position="dodge") + ggtitle("Presence of Microsporidian Nosema OTU in Nezara viridula") +     ylab("Centered Log Ratio") + xlab("Tissue")
ggplot(longcomp[longcomp$variable=="OTU_5",], aes(x=tissue, y=clr, fill=infection)) + geom_bar(stat="identity", position="dodge") + ggtitle("Presence of Salmonella OTU in Nezara viridula") + ylab("Centered Log Ratio") + xlab("Tissue")
tempdf <-as.data.frame(t(compdf[,1:392]))
tempdf$taxa <-data$Taxonomy
write.table(tempdf, file="/Users/rivers/Documents/collaboratorProjects/nosema-stinkbugs/clrOTU.txt", sep="\t")
ggplot(longcomp[longcomp$variable=="OTU_6",], aes(x=tissue, y=clr, fill=infection)) + geom_bar(stat="identity", position="dodge") + ggtitle("Presence of Microsporidian Nosema OTU in Nezara viridula") +     ylab("Centered Log Ratio") + xlab("Tissue")
library(dada2)
install.packages("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.8")
library(dada2)
derepF = derepFastq(system.file("extdata", "~/Downloads/s1.r1.f.gz", package="dada2"))
library(dada2)
rm(list=ls())
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/")
library(ggplot2)
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(group=V2, y=log(V3), x=sample)) +
geom_bar(aes(color=V2))
dat<- read.table("all.scaf.txt", sep="\t")
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/virus_abundance/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$sample <-substr(dat$V1, 1,1)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(group=V2, y=log(V3), x=sample)) +
geom_bar(aes(color=V2))
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill")
ggplot(dat, aes(group=V2, y=log(V3), x=sample)) +
geom_bar(aes(color=V2))
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill")
View(dat)
View(dat)
gsub("_","\\s",dat$name)
gsub("_"," ",dat$name)
dat$name<- gsub("_"," ",dat$name)
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads")
dat<- read.table("all.scaf.txt", sep="\t")
dat
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/virus_abundance/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$name<- gsub("_"," ",dat$name)
dat$sample <-substr(dat$V1, 1,1)
dat$sample <- gsub("1","Worker 1", dat$sample)
dat$sample <- gsub("2","Worker 2", dat$sample)
dat$sample <- gsub("3","Worker 3", dat$sample)
dat$sample <- gsub("4","Worker 4", dat$sample)
dat$sample <- gsub("5","Brood 5", dat$sample)
dat$sample <- gsub("6","Brood 6", dat$sample)
dat$sample <- gsub("7","Dead 7", dat$sample)
dat$sample <- gsub("8","Dead 8", dat$sample)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads")
library(ggplot2)
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/virus_abundance/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$name<- gsub("_"," ",dat$name)
dat$sample <-substr(dat$V1, 1,1)
dat$sample <- gsub("1","1 Worker", dat$sample)
dat$sample <- gsub("2","2 Worker", dat$sample)
dat$sample <- gsub("3","3 Worker", dat$sample)
dat$sample <- gsub("4","4 Worker", dat$sample)
dat$sample <- gsub("5","5 Brood", dat$sample)
dat$sample <- gsub("6","6 Brood", dat$sample)
dat$sample <- gsub("7","7 Dead", dat$sample)
dat$sample <- gsub("8","8 Dead", dat$sample)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads")
hclust
hclust(dat)
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab(S) + scale_fill_brewer(palette="Dark2")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Dark2")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Set1")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Set2")
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/virus_abundance/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$name<- gsub("_"," ",dat$name)
dat$sample <-substr(dat$V1, 1,1)
dat$sample <- gsub("1","1 Worker", dat$sample)
dat$sample <- gsub("2","2 Worker", dat$sample)
dat$sample <- gsub("3","3 Worker", dat$sample)
dat$sample <- gsub("4","4 Worker", dat$sample)
dat$sample <- gsub("5","5 Brood", dat$sample)
dat$sample <- gsub("6","6 Brood", dat$sample)
dat$sample <- gsub("7","7 Dead", dat$sample)
dat$sample <- gsub("8","8 Dead", dat$sample)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Set2")
setwd("~/Documents/collaboratorProjects/fire_ant_viruses/virus_abundance/")
dat<- read.table("all.scaf.txt", sep="\t")
dat$name<- gsub("_"," ",dat$name)
dat$sample <-substr(dat$V1, 1,1)
dat$sample <- gsub("1","1 Worker", dat$sample)
dat$sample <- gsub("2","2 Worker", dat$sample)
dat$sample <- gsub("3","3 Worker", dat$sample)
dat$sample <- gsub("4","4 Worker", dat$sample)
dat$sample <- gsub("5","5 Brood", dat$sample)
dat$sample <- gsub("6","6 Brood", dat$sample)
dat$sample <- gsub("7","7 Dead", dat$sample)
dat$sample <- gsub("8","8 Dead", dat$sample)
names(dat) <-c('sample_long','name',' PctunambiguousReads','unambiguousMB','PctambiguousReads','ambiguousMB', 'unambiguousReads',	'ambiguousReads',"sample")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Set3")
dat$name<- gsub("_"," ",dat$name)
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("") + scale_fill_brewer(palette="Set3")
ggplot(dat, aes(fill=name, y=unambiguousReads, x=sample)) +
geom_bar( stat="identity", position="fill") + ylab("Proportion of virus reads") +
xlab("Sample") + scale_fill_brewer(palette="Set3")
